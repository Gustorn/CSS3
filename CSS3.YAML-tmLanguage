# [PackageDev] target_format: plist, ext: tmLanguage
---
name: CSS3
scopeName: source.css
fileTypes: [css]
uuid: 6618b147-dda0-4ff3-af33-8200c89d88e7

patterns:
- include: '#comment-block'
- include: '#property-list'
- include: '#selector'

repository:

  comment-block:
    name: comment.block.css
    begin: /\*
    beginCaptures:
      '0': {name: punctuation.definition.comment.css}
    end: \*/
    endCaptures:
      '0': {name: punctuation.definition.comment.css}

  identifier:
    # This rule is a simplified version of the official <ident> token in the CSS
    # Syntax Level 3 spec. In practice, it is almost identical to the official
    # grammar, while being much simpler. Simplifying it was important because it
    # appears in so many places in the spec and in this language definition.
    # This rule does not scope escape characters like '\n'. Regexes are not able
    # to repeatedly capture groups, which makes highlighting escapes fragile.
    # For this reason, they've been left out.
    name: string.unquoted.identifier.css
    match: -?[a-zA-Z_\\\p{^ASCII}][-a-zA-Z\d_\\\p{^ASCII}]*

  property-list:
    name: meta.property-list.css
    begin: \{
    beginCaptures:
      '0': {name: punctuation.section.property-list.css}
    patterns:
    - include: '#comment-block'
    - include: '#property-name'
    - include: '#value'
    end: \}
    endCaptures:
      '0': {name: punctuation.section.property-list.css}

  property-name:
    name: meta.property-name.css
    begin: (?=[-a-z])
    patterns:
    - include: '#comment-block'
    - include: '#property-name-illegal'
    - include: '#property-name-illegal-epub'
    - include: '#property-name-illegal-moz'
    - include: '#property-name-illegal-ms'
    - include: '#property-name-illegal-webkit'
    - include: '#property-name-legal'
    - include: '#property-name-custom'
    end: (?=:)

  # This rule supports custom elements, like <polymer-widget>.
  property-name-custom:
    name: support.type.property-name.custom.css
    match: --[a-zA-Z_\\\p{^ASCII}][-a-zA-Z\d_\\\p{^ASCII}]*

  property-name-illegal:
    name: invalid.illegal.css
    match: \b(?:behavior|zoom)\b

  property-name-illegal-epub:
    name: invalid.illegal.css
    match: -epub-(?:text-orientation|text-emphasis-style|text-emphasis-color|text-emphasis|text-combine)\b

  property-name-illegal-moz:
    name: invalid.illegal.css
    match: -moz-(?:window-shadow|user-select|user-modify|user-input|user-focus|stack-sizing|script-size-multiplier|script-min-size|script-level|padding-start|padding-end|outline-radius-topright|outline-radius-topleft|outline-radius-bottomright|outline-radius-bottomleft|outline-radius|orient|margin-start|margin-end|image-region|force-broken-image-icon|float-edge|box-pack|box-orient|box-ordinal-group|box-flex|box-direction|box-align|border-top-colors|border-start-width|border-start-style|border-start-color|border-start|border-right-colors|border-left-colors|border-end-width|border-end-style|border-end-color|border-end|border-bottom-colors|binding|appearance)\b

  property-name-illegal-ms:
    name: invalid.illegal.css
    match: -ms-(?:user-select|interpolation-mode|background-position-[xy])\b

  property-name-illegal-webkit:
    name: invalid.illegal.css
    match: -webkit-(?:touch-callout|text-stroke-width|text-stroke-color|text-stroke|text-size-adjust|text-security|text-fill-color|text-emphasis-position|text-decorations-in-effect|tap-highlight-color|svg-shadow|shape-outside|shape-inside|rtl-ordering|region-break-inside|region-break-before|region-break-after|print-color-adjust|perspective-origin-y|perspective-origin-x|padding-start|padding-end|padding-before|padding-after|overflow-scrolling|nbsp-mode|min-logical-width|min-logical-height|max-logical-width|max-logical-height|match-nearest-mail-blockquote-color|mask-repeat-y|mask-repeat-x|mask-position-y|mask-position-x|mask-box-image-width|mask-box-image-source|mask-box-image-slice|mask-box-image-repeat|mask-box-image-outset|mask-box-image|mask-attachment|marquee-style|marquee-speed|marquee-repetition|marquee-increment|marquee-direction|marquee|margin-top-collapse|margin-start|margin-end|margin-collapse|margin-bottom-collapse|margin-before-collapse|margin-before|margin-after-collapse|margin-after|logical-width|logical-height|locale|line-snap|line-grid|line-clamp|line-break|line-box-contain|line-align|hyphenate-limit-lines|hyphenate-limit-before|hyphenate-limit-after|hyphenate-charset|highlight|font-smoothing|filter|dashboard-region|column-break-inside|column-break-before|column-break-after|column-axis|box-shadow|box-reflect|box-pack|box-orient|box-ordinal-groups|box-lines|box-flex-group|box-flex|box-direction|box-align|border-vertical-spacing|border-start-width|border-start-style|border-start-color|border-start|border-horizontal-spacing|border-fit|border-end-width|border-end-style|border-end-color|border-end|border-before-width|border-before-style|border-before-color|border-before|border-after-width|border-after-style|border-after-color|border-after|background-composite|aspect-ratio|appearance)\b

  property-name-legal:
    name: support.type.property-name.css
    match: (-webkit-transition-timing-function|-webkit-transition-property|-webkit-transition-duration|-webkit-transition-delay|-webkit-transition|-webkit-transform-style|-webkit-transform-origin|-webkit-transform|-webkit-region-fragment|-webkit-perspective-origin|-webkit-perspective|-webkit-order|-webkit-mask-size|-webkit-mask-repeat|-webkit-mask-position|-webkit-mask-origin|-webkit-mask-image|-webkit-composite|-webkit-mask-clip|-webkit-mask|-webkit-justify-content|-webkit-hyphens|-webkit-grid-row|-webkit-grid-column|-webkit-font-variant-ligatures|-webkit-font-size-delta|-webkit-font-kerning|-webkit-font-feature-settings|-webkit-flow-into|-webkit-flow-from|-webkit-flex-wrap|-webkit-flex-shrink|-webkit-flex-grow|-webkit-flex-flow|-webkit-flex-direction|-webkit-flex-basis|-webkit-flex|-webkit-columns|-webkit-column-width|-webkit-column-span|-webkit-column-rule-width|-webkit-column-rule-style|-webkit-column-rule-color|-webkit-column-rule|-webkit-column-gap|-webkit-column-fill|-webkit-column-count|-webkit-break-inside|-webkit-break-before|-webkit-break-after|-webkit-border-image|-webkit-backface-visibility|-webkit-animation-timing-function|-webkit-animation-play-state|-webkit-animation-name|-webkit-animation-iteration-count|-webkit-animation-fill-mode|-webkit-animation-duration|-webkit-animation-direction|-webkit-animation-delay|-webkit-animation|-webkit-align-self|-webkit-align-items|-webkit-align-content|-ms-writing-mode|-ms-wrap-through|-ms-wrap-flow|-ms-word-wrap|-ms-transform-style|-ms-transform-origin|-ms-transform|-ms-text-justify|-ms-text-align-last|-ms-overflow-y|-ms-overflow-x|-ms-overflow-style|-ms-ime-mode|-ms-hyphens|-ms-grid-row-span|-ms-grid-row-align|-ms-grid-row|-ms-grid-column-span|-ms-grid-column-align|-ms-grid-column|-ms-flow-into|-ms-flow-from|-moz-text-decoration-style|-moz-text-decoration-line|-moz-text-decoration-color|-moz-text-align-last|-moz-hyphens|-moz-font-language-override|-moz-font-feature-settings|-moz-columns|-moz-column-width|-moz-column-span|-moz-column-rule-width|-moz-column-rule-style|-moz-column-rule-color|-moz-column-rule|-moz-column-gap|-moz-column-fill|-moz-column-count|-moz-box-sizing)\b|\b(zoom|z-index|writing-mode|wrap-through|wrap-flow|word-wrap|word-spacing|word-break|will-change|width|widows|white-space|voice-volume|voice-stress|voice-rate|voice-range|voice-pitch|voice-family|voice-duration|voice-balance|visibility|vertical-align|user-zoom|unicode-range|unicode-bidi|transition-timing-function|transition-property|transition-duration|transition-delay|transition|transform-style|transform-origin|transform|top|text-underline-position|text-transform|text-shadow|text-overflow|text-orientation|text-justify|text-indent|text-height|text-emphasis-style|text-emphasis-position|text-emphasis-color|text-emphasis|text-decoration-style|text-decoration-skip|text-decoration-line|text-decoration-color|text-decoration|text-combine-upright|text-align-last|text-align|target-position|target-new|target-name|target|table-layout|tab-size|system|symbols|suffix|string-set|src|speak-as|speak|size|shape-outside|shape-margin|shape-image-threshold|running|ruby-position|ruby-merge|ruby-align|rotation-point|rotation|right|rest-before|rest-after|rest|resolution|resize|region-fragment|range|quotes|presentation-level|prefix|position|pointer-events|perspective-origin|perspective|pause-before|pause-after|pause|page-policy|page-break-inside|page-break-before|page-break-after|page|padding-top|padding-right|padding-left|padding-bottom|padding|pad|overflow-y|overflow-x|overflow-wrap|overflow-style|overflow|outline-width|outline-style|outline-offset|outline-color|outline|orphans|orientation|order|opacity|offset-start|offset-end|offset-before|offset-after|object-position|object-fit|negative|nav-up|nav-right|nav-left|nav-index|nav-down|move-to|min-zoom|min-width|min-height|max-zoom|max-width|max-lines|max-height|mask-type|mask-size|mask-repeat|mask-position|mask-origin|mask-mode|mask-image|mask-composite|mask-clip|mask-border-width|mask-border-source|mask-border-slice|mask-border-repeat|mask-border-outset|mask-border|mask|marquee-style|marquee-speed|marquee-play-count|marquee-direction|marks|marker-side|margin-top|margin-right|margin-left|margin-bottom|margin|list-style-type|list-style-position|list-style-image|list-style|line-stacking-strategy|line-stacking-shift|line-stacking-ruby|line-stacking|line-snap|line-slack|line-height|line-grid|line-break|line-box-contain|lighting-color|letter-spacing|left|justify-self|justify-items|justify-content|inline-box-align|initial-letters|indent-edge-reset|ime-mode|image-resolution|image-rendering|image-orientation|icon|hyphens|height|hanging-punctuation|grid-template-rows|grid-template-columns|grid-template-areas|grid-template|grid-row-start|grid-row-end|grid-row|grid-column-start|grid-column-end|grid-column|grid-auto-rows|grid-auto-flow|grid-auto-columns|grid-area|grid|footnote-policy|footnote-display|font-weight|font-variant-position|font-variant-numeric|font-variant-ligatures|font-variant-east-asian|font-variant-caps|font-variant-alternates|font-variant|font-synthesis|font-style|font-stretch|font-size-adjust|font-size|font-language-override|font-kerning|font-feature-settings|font-family|font|flow-into|flow-from|flow|flood-opacity|flood-color|float-wrap|float-offset|float-displace|float-defer-page|float-defer-column|float|flex-wrap|flex-shrink|flex-grow|flex-flow|flex-direction|flex-basis|flex|filter|fallback|empty-cells|dominant-baseline|display-outside|display-inside|display-extras|display-box|display|direction|cursor|cue-before|cue-after|cue|counter-set|counter-reset|counter-increment|corners|corner-shape|content|columns|column-width|column-span|column-rule-width|column-rule-style|column-rule-color|column-rule|column-gap|column-fill|column-count|color-interpolation-filters|color-interpolation|color-correction|color|clip-rule|clip-path|clear-side|clear-after|clear|child-align|chains|caption-side|break-inside|break-before|break-after|box-snap|box-sizing|box-shadow|box-decoration-break|bottom|border-width|border-top-width|border-top-style|border-top-right-radius|border-top-left-radius|border-top-color|border-top|border-style|border-spacing|border-right-width|border-right-style|border-right-color|border-right|border-radius|border-limit|border-left-width|border-left-style|border-left-color|border-left|border-image-width|border-image-source|border-image-slice|border-image-repeat|border-image-outset|border-image|border-color|border-collapse|border-clip-top|border-clip-right|border-clip-left|border-clip-bottom|border-clip|border-bottom-width|border-bottom-style|border-bottom-right-radius|border-bottom-left-radius|border-bottom-color|border-bottom|border|bookmark-state|bookmark-level|bookmark-label|bleed|baseline-shift|background-size|background-repeat|background-position|background-origin|background-image|background-color|background-clip|background-attachment|background|backface-visibility|animation-timing-function|animation-play-state|animation-name|animation-iteration-count|animation-fill-mode|animation-duration|animation-direction|animation-delay|animation|all|alignment-baseline|alignment-adjust|alignment|align-self|align-items|align-content|additive-symbols)\b

  selector:
    # Selectors can start with a lowercase letter, digit (100%), hyphen (-moz-),
    # colon (:not()), period (.banner), hash (#intro), bracket ([value="1"]),
    # or the wildcard (*). The W3C is currently deciding whether the parent
    # selector will be determined by prepending or appending an exclamation mark
    # (!ol li vs ol! li). The exclamation mark may have to be added later.

    # TODO: are uppercase letters permitted?
    name: meta.selector.css
    begin: (?=[\d:.#*\p{Ll}\[-])
    patterns:
    - include: '#comment-block'
    - include: '#selector-combinator'
    - include: '#selector-element-deprecated'
    # selector-element is given a low precedence, because it contains an <ident>
    - include: '#selector-element'
    end: (?={)

  selector-combinator:
    name: keyword.operator.selector-combinator.css
    match: \|\||[+~>]|/-?[a-zA-Z_\\\p{^ASCII}][-a-zA-Z\d_\\\p{^ASCII}]*/

  selector-element:
    # The custom element capture group matches a non-uppercase, non-titlecase
    # letter, optionally followed by letters, digits, combining marks, periods,
    # underscores, or hyphens.
    match: ((?:-?[a-zA-Z_\\\p{^ASCII}][-a-zA-Z\d_\\\p{^ASCII}]*|\*)\s*\|)?\s*(?:(?<![:-])\b(abbr|address|area|article|aside|audio|a|base|bdi|bdo|blockquote|body|br|button|b|canvas|caption|cite|code|colgroup|col|datalist|data|dd|del|details|dfn|dialog|div|dl|dt|embed|em|fieldset|figcaption|figure|footer|form|h[1-6]|header|head|hr|html|iframe|i|img|input|ins|kbd|keygen|label|legend|link|li|main|map|mark|math|menuitem|menu|meta|meter|nav|noscript|object|ol|optgroup|option|output|param|pre|progress|p|q|rb|rp|rtc?|ruby|samp|script|section|select|small|source|span|strong|style|sub|summary|sup|svg|s|table|tbody|td|template|textarea|tfoot|thead|th|time|title|track|tr|ul?|var|video|wbr)\b|([-\p{Ll}\p{Lm}\p{Lo}][-\p{Ll}\p{Lm}\p{Lo}\d._\p{M}]*)|(\*))(?!-)
    captures:
      '1': {name: entity.other.namespace.css}
      '2': {name: entity.name.tag.css}
      # Capture 3 is the custom element scope, e.g. <polymer-widget>.
      '3': {name: entity.name.tag.custom.css}
      '4': {name: entity.name.tag.wildcard.css}

  selector-element-deprecated:
    name: invalid.deprecated.css
    match: (?<![-:\[])\b(acronym|applet|basefont|bgsound|big|blink|center|dir|font|frameset|frame|hgroup|isindex|listing|marquee|multicol|nextid|nobr|noembed|noframes|plaintext|spacer|strike|tt|xmp)\b(?!-)

  type-all:
    name: support.constant.property-value.css
    match: \b(?:unset|initial|inherit)\b

  type-animation-name:
    match: \b(?:(none)|())\b
    captures:
      '1': {name: support.constant.property-value.css}
      '2': {name: string.unquoted.identifier.css}

  type-attachment:
    name: support.constant.property-value.css
    match: \b(?:scroll|local|fixed)\b

  type-box:
    name: support.constant.property-value.css
    match: \b(?:padding-box|content-box|border-box)\b

  type-color-named:
    name: support.constant.color.css
    match: \b(?:yellowgreen|yellow|whitesmoke|white|wheat|violet|turquoise|transparent|tomato|thistle|teal|tan|steelblue|springgreen|snow|slategrey|slategray|slateblue|skyblue|silver|sienna|seashell|seagreen|sandybrown|salmon|saddlebrown|royalblue|rosybrown|red|rebeccapurple|purple|powderblue|plum|pink|peru|peachpuff|papayawhip|palevioletred|paleturquoise|palegreen|palegoldenrod|orchid|orangered|orange|olivedrab|olive|oldlace|navy|navajowhite|moccasin|mistyrose|mintcream|midnightblue|mediumvioletred|mediumturquoise|mediumspringgreen|mediumslateblue|mediumseagreen|mediumpurple|mediumorchid|mediumblue|mediumaquamarine|maroon|magenta|linen|limegreen|lime|lightyellow|lightsteelblue|lightslategrey|lightslategray|lightskyblue|lightseagreen|lightsalmon|lightpink|lightgrey|lightgreen|lightgray|lightgoldenrodyellow|lightcyan|lightcoral|lightblue|lemonchiffon|lawngreen|lavenderblush|lavender|khaki|ivory|indigo|indianred|hotpink|honeydew|grey|greenyellow|green|gray|goldenrod|gold|ghostwhite|gainsboro|fuchsia|forestgreen|floralwhite|firebrick|dodgerblue|dimgrey|dimgray|deepskyblue|deeppink|darkviolet|darkturquoise|darkslategrey|darkslategray|darkslateblue|darkseagreen|darksalmon|darkred|darkorchid|darkorange|darkolivegreen|darkmagenta|darkkhaki|darkgrey|darkgreen|darkgray|darkgoldenrod|darkcyan|darkblue|cyan|currentColor|crimson|cornsilk|cornflowerblue|coral|chocolate|chartreuse|cadetblue|burlywood|brown|blueviolet|blue|blanchedalmond|black|bisque|beige|azure|aquamarine|aqua|antiquewhite|aliceblue)\b

  type-color-hex:
    name: constant.other.color.rgb-value.css
    match: (#)(?:\h{6}|\h{3})
    captures:
      '1': {name: punctuation.definition.constant.css}

  type-counter-style-predefined:
    name: support.constant.property-value.css
    match: \b(?:yemsa|wolaita|upper-ukrainian-full|upper-ukrainian|upper-serbo-croatian|upper-russian-full|upper-russian|upper-roman|upper-oromo-qubee|upper-macedonian|upper-latin|upper-hexadecimal|upper-bulgarian|upper-belorussian|upper-armenian|upper-alpha-symbolic|upper-alpha|trad-chinese-informal|trad-chinese-formal|tigre|tibetan|thai-alphabetic|thai|telugu|tamil|super-decimal|square|simple-upper-roman|simple-lower-roman|simp-chinese-informal|simp-chinese-formal|silti|sidama|shan|saho|persian-alphabetic|persian-abjad|persian|parenthesized-lower-latin|parenthesized-ideograph|parenthesized-hangul-syllable|parenthesized-hangul-consonant|parenthesized-decimal|oromo|oriya|octal|none|new-base-60|myanmar|mongolian|meen|malayalam|lower-ukrainian-full|lower-ukrainian|lower-serbo-croatian|lower-russian-full|lower-russian|lower-roman|lower-oromo-qubee|lower-macedonian|lower-latin|lower-hexadecimal|lower-greek|lower-bulgarian|lower-belorussian|lower-armenian|lower-alpha-symbolic|lower-alpha|lepcha|lao|kunama|korean-syllable|korean-hanja-informal|korean-hanja-formal|korean-hangul-formal|korean-consonant|konso|khmer-consonant|khmer|kembata|kebena|katakana-iroha|katakana|kannada|kaffa|japanese-informal|japanese-formal|hiragana-iroha|hiragana|hindi|hebrew-extended|hebrew|harari|hadiyya|gurmukhi|gumuz|gujarati|greek|georgian|gedeo|fullwidth-upper-roman|fullwidth-upper-alpha|fullwidth-lower-roman|fullwidth-lower-alpha|fullwidth-decimal|filled-circled-decimal|ethiopic-numeric|double-circled-decimal|dotted-decimal|dizi|disclosure-open|disclosure-closed|disc|devanagari|decimal-leading-zero|decimal|cjk-ideographic|cjk-heavenly-stem|cjk-earthly-branch|cjk-decimal|circled-upper-latin|circled-lower-latin|circled-korean-syllable|circled-korean-consonant|circled-katakana|circled-ideograph|circled-decimal|circle|cambodian-consonant|cambodian|blin|binary|bengali|armenian|ari|arabic-indic|ancient-tamil|agaw|afar)\b

  type-function-attr:
    begin: \b(attr)(\()
    beginCaptures:
      '1': {name: support.function.attr.css}
      '2': {name: punctuation.section.function.css}
    contentName: meta.function.attr.css
    patterns:
    - include: '#comment-block'
    - include: '#type-type-or-unit'
    # TODO: support <attr-name> (qualified name) and <attr-fallback>
    end: \)
    endCaptures:
      '0': {name: punctuation.section.function.css}

  type-function-calc:
    begin: \b(calc)(\()
    beginCaptures:
      '1': {name: support.function.calc.css}
      '2': {name: punctuation.section.function.css}
    contentName: meta.function.calc.css
    patterns:
    - include: '#comment-block'
    # TODO: match calc parameters (can be any value)
    end: \)
    endCaptures:
      '0': {name: punctuation.section.function.css}

  type-function-content:
    begin: \b(content)(\()
    beginCaptures:
      '1': {name: support.function.content.css}
      '2': {name: punctuation.section.function.css}
    contentName: meta.function.content.css
    patterns:
    - include: '#comment-block'
    - name: support.constant.property-value.css
      match: \b(?:text|first-letter|before|after)\b
    end: \)
    endCaptures:
      '0': {name: punctuation.section.function.css}

  type-function-counter:
    begin: \b(counters?)(\()
    beginCaptures:
      '1': {name: support.function.counter.css}
      '2': {name: punctuation.section.function.css}
    contentName: meta.function.counter.css
    patterns:
    - include: '#comment-block'
    - name: support.constant.property-value.css
      match: \bnone\b
    - include: '#type-counter-style-predefined'
    - include: '#type-function-symbols'
    - include: '#type-string-double'
    - include: '#type-string-single'
    # This covers the <identifier> parameter to counter() and the <custom-ident>
    # part of a custom counter style.
    - include: '#identifier'
    end: \)
    endCaptures:
      '0': {name: punctuation.section.function.css}

  type-function-cubic-bezier:
    match: \b(cubic-bezier)(\()\s*(0?\.\d+|1(?:\.0+)?|0)\s*,\s*([+-]?(?:[0-9]+\.[0-9]+|\.[0-9]+|[0-9]+)(?:[eE][+-]?[0-9]+)?)\s*,\s*(0?\.\d+|1(?:\.0+)?|0)\s*,\s*([+-]?(?:[0-9]+\.[0-9]+|\.[0-9]+|[0-9]+)(?:[eE][+-]?[0-9]+)?)\s*(\))
    captures:
      '1': {name: support.function.cubic-bezier.css}
      '2': {name: punctuation.section.function.css}
      '3': {name: constant.numeric.css}
      '4': {name: constant.numeric.css}
      '5': {name: constant.numeric.css}
      '6': {name: constant.numeric.css}

  type-function-hsl:
    match: \b(hsl)(\()\s*(360|3[0-5]\d|[12]\d\d|\d\d|\d)\s*,\s*(((?:\d\d|\d)(?:\.\d+)?|100(?:\.0+)?|\.\d+)(%))\s*,\s*((?:(\d\d|\d)(?:\.\d+)?|100(?:\.0+)?|\.\d+)(%))\s*(\))
    captures:
      '1': {name: support.function.hsl.css}
      '2': {name: punctuation.section.function.css}
      '3': {name: constant.numeric.css}
      '4': {name: constant.other.color.rgb-percentage.css}
      '5': {name: constant.numeric.css}
      '6': {name: keyword.other.unit.css}
      '7': {name: constant.other.color.rgb-percentage.css}
      '8': {name: constant.numeric.css}
      '9': {name: keyword.other.unit.css}
      '10': {name: punctuation.section.function.css}

  type-function-hsla:
    match: \b(hsla)(\()\s*(360|3[0-5]\d|[12]\d\d|\d\d|\d)\s*,\s*(((?:\d\d|\d)(?:\.\d+)?|100(?:\.0+)?|\.\d+)(%))\s*,\s*(((?:\d\d|\d)(?:\.\d+)?|100(?:\.0+)?|\.\d+)(%))\s*,\s*(0(?:\.\d+)?|1(?:\.0+)?|\.\d+)\s*(\))
    captures:
      '1': {name: support.function.hsla.css}
      '2': {name: punctuation.section.function.css}
      '3': {name: constant.numeric.css}
      '4': {name: constant.other.color.rgb-percentage.css}
      '5': {name: constant.numeric.css}
      '6': {name: keyword.other.unit.css}
      '7': {name: constant.other.color.rgb-percentage.css}
      '8': {name: constant.numeric.css}
      '9': {name: keyword.other.unit.css}
      '10': {name: constant.numeric.alphavalue.css}
      '11': {name: punctuation.section.function.css}

  type-function-rgb:
    match: \b(rgb)(\()\s*(?:(2[0-5][0-5]|1\d\d|\d\d|\d)\s*,\s*(2[0-5][0-5]|1\d\d|\d\d|\d)\s*,\s*(2[0-5][0-5]|1\d\d|\d\d|\d)|(((?:\d\d|\d)(?:\.\d+)?|100(?:\.0+)?|\.\d+)(%))\s*,\s*(((?:\d\d|\d)(?:\.\d+)?|100(?:\.0+)?|\.\d+)(%))\s*,\s*(((?:\d\d|\d)(?:\.\d+)?|100(?:\.0+)?|\.\d+)(%)))\s*(\))
    captures:
      '1': {name: support.function.rgb.css}
      '2': {name: punctuation.section.function.css}
      '3': {name: constant.numeric.css}
      '4': {name: constant.numeric.css}
      '5': {name: constant.numeric.css}
      '6': {name: constant.other.color.rgb-percentage.css}
      '7': {name: constant.numeric.css}
      '8': {name: keyword.other.unit.css}
      '9': {name: constant.other.color.rgb-percentage.css}
      '10': {name: constant.numeric.css}
      '11': {name: keyword.other.unit.css}
      '12': {name: constant.other.color.rgb-percentage.css}
      '13': {name: constant.numeric.css}
      '14': {name: keyword.other.unit.css}
      '15': {name: punctuation.section.function.css}

  type-function-rgba:
    match: \b(rgba)(\()\s*(?:(2[0-5][0-5]|1\d\d|\d\d|\d)\s*,\s*(2[0-5][0-5]|1\d\d|\d\d|\d)\s*,\s*(2[0-5][0-5]|1\d\d|\d\d|\d)|(((?:\d\d|\d)(?:\.\d+)?|100(?:\.0+)?|\.\d+)(%))\s*,\s*(((?:\d\d|\d)(?:\.\d+)?|100(?:\.0+)?|\.\d+)(%))\s*,\s*(((?:\d\d|\d)(?:\.\d+)?|100(?:\.0+)?|\.\d+)(%)))\s*,\s*(0(?:\.\d+)?|1(?:\.0+)?|\.\d+)\s*(\))
    captures:
      '1': {name: support.function.rgba.css}
      '2': {name: punctuation.section.function.css}
      '3': {name: constant.numeric.css}
      '4': {name: constant.numeric.css}
      '5': {name: constant.numeric.css}
      '6': {name: constant.other.color.rgb-percentage.css}
      '7': {name: constant.numeric.css}
      '8': {name: keyword.other.unit.css}
      '9': {name: constant.other.color.rgb-percentage.css}
      '10': {name: constant.numeric.css}
      '11': {name: keyword.other.unit.css}
      '12': {name: constant.other.color.rgb-percentage.css}
      '13': {name: constant.numeric.css}
      '14': {name: keyword.other.unit.css}
      '15': {name: constant.numeric.alphavalue.css}
      '16': {name: punctuation.section.function.css}

  type-function-steps:
    begin: \b(steps)(\()
    beginCaptures:
      '1': {name: support.function.steps.css}
      '2': {name: punctuation.section.function.css}
    patterns:
    - include: '#comment-block'
    - name: support.constant.property-value.css
      match: \b(?:start|end)\b
    - include: '#type-integer-positive'
    end: \)
    endCaptures:
      '0': {name: punctuation.section.function.css}

  type-function-symbols:
    begin: \b(symbols)(\()
    beginCaptures:
      '1': {name: support.function.symbols.css}
      '2': {name: punctuation.section.function.css}
    patterns:
    - include: '#comment-block'
    - name: support.constant.property-value.css
      match: \b(?:symbolic|numeric|none|fixed|cyclic|alphabetic)\b
    - include: '#type-string-double'
    - include: '#type-string-single'
    - include: '#type-function-url'
    end: \)
    endCaptures:
      '0': {name: punctuation.section.function.css}

  type-function-toggle:
    begin: \b(toggle)(\()
    beginCaptures:
      '1': {name: support.function.toggle.css}
      '2': {name: punctuation.section.function.css}
    contentName: meta.function.toggle.css
    patterns:
    - include: '#comment-block'
    # TODO: match toggle parameters (can be any value)
    end: \)
    endCaptures:
      '0': {name: punctuation.section.function.css}

  # per RFC 3986, the only characters permitted in a URL match this regex:
  # [a-zA-Z0-9\-\._~:/\?#\[\]@!$&'()\*\+\%,;=]*
  type-function-url:
    match: \b(url)(\()\s*(?:(\"[a-zA-Z0-9\-\._~:/\?#\[\]@!$&'()\*\+\%,;=]*\")|(\'[a-zA-Z0-9\-\._~:/\?#\[\]@!$&'()\*\+\%,;=]*\')|([\\a-zA-Z0-9\-\._~:/\?#\[\]@!$&'()\*\+\%,;=]+))\s*(\))
    captures:
      '1': {name: support.function.url.css}
      '2': {name: punctuation.section.function.css}
      '3': {name: string.quoted.double.css}
      '4': {name: string.quoted.single.css}
      '5': {name: string.unquoted.url.css}
      '6': {name: punctuation.section.function.css}

  type-function-var:
    begin: \b(var)(\()
    beginCaptures:
      '1': {name: support.function.var.css}
      '2': {name: punctuation.section.function.css}
    contentName: meta.function.var.css
    patterns:
    - include: '#comment-block'
    # TODO: match var parameters (can be any value)
    end: \)
    endCaptures:
      '0': {name: punctuation.section.function.css}

  type-important:
    name: keyword.other.important.css
    match: '!important\b'

  type-integer:
    name: constant.numeric.css
    match: '[+-]?\d+'

  type-integer-positive:
    name: constant.numeric.css
    match: \+?(?:[1-9]|[1-9]\d+)

  type-length:
    match: (?:([+-]?(?:[0-9]+\.[0-9]+|\.[0-9]+|[0-9]+)(?:[eE][+-]?[0-9]+)?)(r?em|ex|ch|vw|vh|vmin|vmax|cm|mm|q|in|pc|pt|px)\b|\b(0)\b)
    captures:
      '1': {name: constant.numeric.css}
      '2': {name: keyword.other.unit.css}
      '3': {name: constant.numeric.css}

  type-length-non-negative:
    match: (?:(\+?(?:[0-9]+\.[0-9]+|\.[0-9]+|[0-9]+)(?:[eE][+-]?[0-9]+)?)(r?em|ex|ch|vw|vh|vmin|vmax|cm|mm|q|in|pc|pt|px)\b|\b(0)\b)
    captures:
      '1': {name: constant.numeric.css}
      '2': {name: keyword.other.unit.css}
      '3': {name: constant.numeric.css}

  type-number:
    name: constant.numeric.css
    match: '[+-]?(?:[0-9]+\.[0-9]+|\.[0-9]+|[0-9]+)(?:[eE][+-]?[0-9]+)?'

  type-number-non-negative:
    name: constant.numeric.css
    match: \+?(?:[0-9]+\.[0-9]+|\.[0-9]+|[0-9]+)(?:[eE][+-]?[0-9]+)?

  type-percentage:
    match: (?:([+-]?(?:[0-9]+\.[0-9]+|\.[0-9]+|[0-9]+)(?:[eE][+-]?[0-9]+)?)(%)|\b(0)\b)
    captures:
      '1': {name: constant.numeric.css}
      '2': {name: keyword.other.unit.css}
      '3': {name: constant.numeric.css}

  type-percentage-non-negative:
    match: (?:(\+?(?:[0-9]+\.[0-9]+|\.[0-9]+|[0-9]+)(?:[eE][+-]?[0-9]+)?)(%)|\b(0)\b)
    captures:
      '1': {name: constant.numeric.css}
      '2': {name: keyword.other.unit.css}
      '3': {name: constant.numeric.css}

  # TODO: delete this rule if unused
  # type-qualified-name:
  #   match: (?:(-?[a-zA-Z_\\\p{^ASCII}][-a-zA-Z\d_\\\p{^ASCII}]*|\*)\s*(\|)\s*)?(?:(-?[a-zA-Z_\\\p{^ASCII}][-a-zA-Z\d_\\\p{^ASCII}]*)|(\*))
  #   captures:
  #     # TODO: should these be scoped as attribute names? so far i only know of this rules' use with attributes
  #     '1': {name: entity.other.attribute-name.namespace.css}
  #     '2': {name: punctuation.separator.namespace.css}
  #     '3': {name: entity.other.attribute-name.css}
  #     '4': {name: entity.other.attribute-name.wildcard.css}

  type-repeat-style:
    name: support.constant.property-value.css
    match: \b(?:space|round|repeat-y|repeat-x|repeat|no-repeat)\b

  type-string-double:
    name: string.quoted.double.css
    begin: \"
    beginCaptures:
      '0': {name: punctuation.definition.string.begin.css}
    patterns:
    - include: '#comment-block'
    end: \"
    endCaptures:
      '0': {name: punctuation.definition.string.begin.css}

  type-string-single:
    name: string.quoted.single.css
    begin: \'
    beginCaptures:
      '0': {name: punctuation.definition.string.begin.css}
    patterns:
    - include: '#comment-block'
    end: \'
    endCaptures:
      '0': {name: punctuation.definition.string.begin.css}

  type-time:
    match: ([+-]?(?:[0-9]+\.[0-9]+|\.[0-9]+|[0-9]+)(?:[eE][+-]?[0-9]+)?)(m?s)|\b(0)\b
    captures:
      '1': {name: constant.numeric.css}
      '2': {name: keyword.other.unit.css}
      '3': {name: constant.numeric.css}

  type-type-or-unit:
    name: support.constant.type-or-unit.css
    match: \b(?:vw|vmin|vmax|vh|url|time|string|s|rem|rad|px|pt|pc|number|ms|mm|length|kHz|integer|in|Hz|grad|frequency|ex|em|deg|color|cm|angle)\b|(%)

  value:
    name: meta.value.css
    begin: ':'
    beginCaptures:
      '0': {name: punctuation.terminator.rule.css}
    patterns:
    - include: '#comment-block'
    - include: '#value-align-content-justify-content'
    - include: '#value-align-items-align-self-justify-self'
    - include: '#value-alignment'
    - include: '#value-alignment-adjust'
    - include: '#value-alignment-baseline'
    - include: '#value-all'
    - include: '#value-animation-delay-animation-duration'
    - include: '#value-animation-direction'
    - include: '#value-animation-fill-mode'
    - include: '#value-animation-iteration-count'
    - include: '#value-animation-name'
    - include: '#value-animation-play-state'
    - include: '#value-animation-timing-function'
    - include: '#value-animation'
    - include: '#value-backface-visibility'
    - include: '#value-background-attachment'
    - include: '#value-background-clip'
    - include: '#value-background-color'
    - include: '#value-background-image'
    - include: '#value-background-origin'
    - include: '#value-background-position'
    - include: '#value-background-repeat'
    - include: '#value-background-size'
    - include: '#value-background'
    - include: '#value-baseline-shift'
    - include: '#value-bleed'
    - include: '#value-bookmark-label'
    - include: '#value-display'
    - include: '#value-justify-items'
    - include: '#value-padding'
    end: ;
    endCaptures:
      '0': {name: punctuation.terminator.rule.css}

  value-align-content-justify-content:
    begin: (?<=(?:align-content:|justify-content:))
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - name: support.constant.property-value.css
      match: \b(?:stretch|space-between|space-around|flex-start|flex-end|center)\b
    end: (?=;)

  value-align-items-align-self-justify-self:
    begin: (?<=(?:align-items:|align-self:|justify-self:))
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - match: \b(?:(stretch|last-baseline|baseline|auto)|(start|self-start|self-end|right|left|flex-start|flex-end|end|center)(?:\s+(true|safe))?|(?:(true|safe)\s+)?(start|self-start|self-end|right|left|flex-start|flex-end|end|center))\b
      captures:
        '1': {name: support.constant.property-value.css}
        '2': {name: support.constant.property-value.css}
        '3': {name: support.constant.property-value.css}
        '4': {name: support.constant.property-value.css}
        '5': {name: support.constant.property-value.css}
    end: (?=;)

  value-alignment:
    begin: (?<=alignment:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - name: support.constant.property-value.css
      match: \b(?:top|right|left|center|bottom)\b
    end: (?=;)

  value-alignment-adjust:
    begin: (?<=alignment-adjust:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - name: support.constant.property-value.css
      match: \b(?:under-edge|text-under-edge|text-over-edge|over-edge|middle|mathematical|ideographic|hanging|central|baseline|auto|alphabetic)\b
    - include: '#type-length'
    - include: '#type-percentage'
    - include: '#type-function-calc'
    end: (?=;)

  value-alignment-baseline:
    begin: (?<=alignment-baseline:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - name: support.constant.property-value.css
      match: \b(?:use-script|under-edge|text-under-edge|text-over-edge|over-edge|middle|mathematical|ideographic|hanging|central|baseline|alphabetic)\b
    end: (?=;)

  value-all:
    begin: (?<=all:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    end: (?=;)

  # TODO: finish this
  value-animation:
    begin: (?<=animation:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - name: support.constant.property-value.css
      match: \b(?:step-start|step-end|linear|ease-out|ease-in-out|ease-in|ease)\b
    - name: support.constant.property-value.css
      match: \b(?:reverse|normal|alternate-reverse|alternate)\b
    - name: support.constant.property-value.css
      match: \b(?:none|forwards|both|backwards)\b
    - name: support.constant.property-value.css
      match: \b(?:running|paused)\b
    - name: support.constant.property-value.css
      match: \binfinite\b
    - name: support.constant.property-value.css
      match: \bnone\b
    - include: '#type-number-non-negative'
    - include: '#type-time'
    - include: '#type-function-calc'
    - include: '#type-function-cubic-bezier'
    - include: '#type-function-steps'
    - include: '#identifier'
    end: (?=;)

  value-animation-delay-animation-duration:
    begin: (?<=(?:animation-delay:|animation-duration:))
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - include: '#type-time'
    - include: '#type-function-calc'
    end: (?=;)

  value-animation-direction:
    begin: (?<=animation-direction:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - name: support.constant.property-value.css
      match: \b(?:reverse|normal|alternate-reverse|alternate)\b
    end: (?=;)

  value-animation-fill-mode:
    begin: (?<=animation-fill-mode:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - name: support.constant.property-value.css
      match: \b(?:none|forwards|both|backwards)\b
    end: (?=;)

  value-animation-iteration-count:
    begin: (?<=animation-iteration-count:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - name: support.constant.property-value.css
      match: \binfinite\b
    - include: '#type-number-non-negative'
    - include: '#type-function-calc'
    end: (?=;)

  value-animation-name:
    begin: (?<=animation-name:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - name: support.constant.property-value.css
      match: \bnone\b
    - include: '#identifier'
    end: (?=;)

  value-animation-play-state:
    begin: (?<=animation-play-state:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - name: support.constant.property-value.css
      match: \b(?:running|paused)\b
    end: (?=;)

  value-animation-timing-function:
    begin: (?<=animation-timing-function:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - name: support.constant.property-value.css
      match: \b(?:step-start|step-end|linear|ease-out|ease-in-out|ease-in|ease)\b
    - include: '#type-function-cubic-bezier'
    - include: '#type-function-steps'
    end: (?=;)

  value-backface-visibility:
    begin: (?<=backface-visibility:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - name: support.constant.property-value.css
      match: \b(?:visible|hidden)\b
    end: (?=;)

  value-background:
      begin: (?<=background:)
      patterns:
      - include: '#comment-block'
      - include: '#type-important'
      - include: '#type-all'
      - include: '#type-function-attr'
      - include: '#type-function-toggle'
      - include: '#type-function-var'
      - name: support.constant.property-value.css
        match: \b(?:top|space|right|none|left|cover|contain|center|bottom|auto)\b
      - include: '#type-repeat-style'
      - include: '#type-box'
      - include: '#type-attachment'
      - include: '#type-function-url'
      - include: '#type-color-named'
      - include: '#type-function-hsla'
      - include: '#type-function-hsl'
      - include: '#type-function-rgba'
      - include: '#type-function-rgb'
      - include: '#type-color-hex'
      - include: '#type-length-non-negative'
      - include: '#type-percentage-non-negative'
      end: (?=;)

  value-background-attachment:
    begin: (?<=background-attachment:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - include: '#type-attachment'
    end: (?=;)

  value-background-clip:
    begin: (?<=background-clip:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - include: '#type-box'
    end: (?=;)

  value-background-color:
    begin: (?<=background-color:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - include: '#type-color-named'
    - include: '#type-function-hsla'
    - include: '#type-function-hsl'
    - include: '#type-function-rgba'
    - include: '#type-function-rgb'
    - include: '#type-color-hex'
    end: (?=;)

  value-background-image:
    begin: (?<=background-image:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - name: support.constant.property-value.css
      match: \bnone\b
    - include: '#type-function-url'
    end: (?=;)

  value-background-origin:
    begin: (?<=background-origin:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - include: '#type-box'
    end: (?=;)

  value-background-position:
    begin: (?<=background-position:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - name: support.constant.property-value.css
      match: \b(top|right|left|center|bottom)\b
    - include: '#type-length'
    - include: '#type-percentage'
    end: (?=;)

  value-background-repeat:
    begin: (?<=background-repeat:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - include: '#type-repeat-style'
    end: (?=;)

  value-background-size:
    begin: (?<=background-size:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - name: support.constant.property-value.css
      match: \b(?:cover|contain|auto)\b
    - include: '#type-length-non-negative'
    - include: '#type-percentage-non-negative'
    end: (?=;)

  value-baseline-shift:
    begin: (?<=baseline-shift:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - name: support.constant.property-value.css
      match: \b(?:super|sub|baseline)\b
    - include: '#type-length'
    - include: '#type-percentage'
    end: (?=;)

  value-bleed:
    begin: (?<=bleed:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - name: support.constant.property-value.css
      match: \bauto\b
    - include: '#type-length'
    end: (?=;)

  value-bookmark-label:
    begin: (?<=bookmark-label:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - name: support.constant.property-value.css
      match: \bnone\b
    # TODO: write these functions
    - include: '#type-function-content'
    # The rule for counter() also covers counters()
    - include: '#type-function-counter'
    - include: '#type-string-double'
    - include: '#type-string-single'
    end: (?=;)

  value-display:
    begin: (?<=display:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - name: support.constant.property-value.css
      match: \b(?:table-row-group|table-row|table-header-group|table-footer-group|table-column-group|table-column|table-cell|table-caption|table|run-in|ruby-text-group|ruby-text|ruby-base-group|ruby-base|ruby|none|list-item|inline-table|inline-flex|inline-block|inline|flex|container|compact|block)\b
    end: (?=;)

  value-justify-items:
    begin: (?<=justify-items:)
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - name: support.constant.property-value.css
      match: \b(?:true|stretch|start|self-start|self-end|safe|right|legacy|left|last-baseline|flex-start|flex-end|end|center|baseline|auto)\b
    end: (?=;)

  value-padding:
    begin: (?<=(?:padding-top:|padding-right:|padding-left:|padding-bottom:|padding:))
    patterns:
    - include: '#comment-block'
    - include: '#type-important'
    - include: '#type-all'
    - include: '#type-function-attr'
    - include: '#type-function-toggle'
    - include: '#type-function-var'
    - name: support.constant.property-value.css
      match: \bauto\b
    - include: '#type-length'
    - include: '#type-percentage'
    - include: '#type-function-calc'
    end: (?=;)


# TODO
#   length, length-positive, length-non-negative, absolute-length, relative-length
#   fill in several more property values in property_values.txt and #value
#       don't get carried away. work a little on each major component (completions,
#       language def, selectors, values, indexing) to make sure everything keeps
#       working
#   add more selectors
#   test symbol indexing with classes and ids when you add support for those selectors
#   edit symbol index pattern for matching classes and ids so it handles identifiers
#   can a selector start with an uppercase letter? custom elements can't

# FINAL CHECK
#   all #value rules have valall
#   #type-function-calc is included in all rules that take an <integer>, <frequency>, <time>, etc.

...
